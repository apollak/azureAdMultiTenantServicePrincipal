@model AzureServicePrincipalWeb.Models.ServicePrincipalModel
@{
    ViewBag.Title = "Home Page";
}

@using (Html.BeginForm("PostIndex", "Home"))
{
    @*@Html.AntiForgeryToken()*@

    <div class="form-horizontal">
        @if (Model.ShowSpDetails)
        {
            <hr />
            <h4>Creating a new Service Principal in your Directory</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AppIdUri, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AppIdUri, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AppIdUri, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TenantId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.TenantId)
                    <br />
                    @Html.ActionLink("Consent for different Tenant", "ConsentReset");
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AppId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.AppId)
                </div>
            </div>
        }
        else
        {
            <hr/>
            <h4>Enter Tenant ID or Tenant Domain for additional user consent!</h4>
            <b>Note:</b> <p>Additional consent is typically needed when signing in with a Microsoft Account or when you selected to switch the tenant!</p>
            <hr/>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ConsentAzureAdTenantDomainOrId, "Tenant ID/Domain", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConsentAzureAdTenantDomainOrId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ConsentAzureAdTenantDomainOrId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        
        <div class="form-group">
            @Html.LabelFor(model => model.UserMessage, htmlAttributes: new { @class = "control-label col-md-2", @style = "white-space: pre-line" })
            <div class="col-md-10">
                @foreach(var s in Model.UserMessage.Split(new string[] { System.Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries))
                {
                    <p>@s</p>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="Save" value="Save" class="btn btn-default" style='visibility: @(Model.SubmitSpEnabled ? "visible" : "hidden")' formaction="/Home/SubmitServicePrincipal" />
                <input type="submit" id="UserConsent" value="Start Manual User-Consent" class="btn" style='visibility: @(Model.SubmitConsentEnabled ? "visible": "hidden")' formaction="/Home/InitiateConsent" />
            </div>
        </div>

        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <h4>Administrative Consent:</h4>
                <ul class="list-group">
                    <li class="list-group-item">This application requires accessing Azure Active Directory (Graph API) under the name of the user!</li>
                    <li class="list-group-item">That type of delegation requires either administrative permissions (Global Admin role) or a consent done by an Admin to enable the application for ordinary Azure AD Users (User role).</li>
                    <li class="list-group-item">If you want to enable creation of service principals, a Global Admin first needs to execute the Admin Consent by clicking the button below!</li>
                </ul>
                <br/>
                <input type="submit" id="AdminConsent" value="Start Admin-Consent (as Global Admin)" class="btn btn-warning" formaction="/Home/InitiateAdminConsent" disabled='@(Model.SubmitAdminConsentEnabled ? null : "disabled")' />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    function redeemCodes() {
        $.ajax(
                {
                    url: "/Home/RedeemToken",
                    method: "POST"
                }
            ).done(
                function () {
                    alert('done!');
                });
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
